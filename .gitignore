# Created by https://www.toptal.com/developers/gitignore/api/python,django
# Edit at https://www.toptal.com/developers/gitignore?templates=python,django

### Django ###
*.log
*.pot
*.pyc
__pycache__/
local_settings.py
db.sqlite3
db.sqlite3-journal

# If your build process includes running collectstatic, then you probably don't need or want to include staticfiles/
# in your Git repository. Update and uncomment the following line accordingly.
# <django-project-name>/staticfiles/

### Django.Python Stack ###
# Byte-compiled / optimized / DLL files
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo

# Django stuff:

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

### Python ###
# Byte-compiled / optimized / DLL files

# C extensions

# Distribution / packaging

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.

# Installer logs

# Unit test / coverage reports

# Translations

# Django stuff:

# Flask stuff:

# Scrapy stuff:

# Sphinx documentation

# PyBuilder

# Jupyter Notebook

# IPython

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm

# Celery stuff

# SageMath parsed files

# Environments

# Spyder project settings

# Rope project settings

# mkdocs documentation

# mypy

# Pyre type checker

# pytype static type analyzer

# Cython debug symbols

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.

### Python Patch ###
# Poetry local configuration file - https://python-poetry.org/docs/configuration/#local-configuration
poetry.toml

# ruff
.ruff_cache/

# LSP config files
pyrightconfig.json

# End of https://www.toptal.com/developers/gitignore/api/python,django
/.idea/.gitignore
/Tour/migrations/0007_remove_tour_transport_tour_required_documents_and_more.py
/Tour/migrations/0008_category_image_alter_banner_image_alter_banner_link_and_more.py
/Tour/migrations/0009_category_parent_alter_banner_image.py
/static/drf-yasg/swagger-ui-dist/absolute-path.js
/.idea/dataSources.xml
/static/drf-yasg/swagger-ui-dist/favicon-32x32.png
/.idea/git_toolbox_blame.xml
/.idea/git_toolbox_prj.xml
/static/drf-yasg/immutable.js
/static/drf-yasg/immutable.min.js
/static/drf-yasg/swagger-ui-dist/index.css
/static/drf-yasg/swagger-ui-dist/index.js
/static/drf-yasg/insQ.js
/static/drf-yasg/insQ.min.js
/static/drf-yasg/redoc/LICENSE
/static/drf-yasg/redoc-old/LICENSE
/static/drf-yasg/swagger-ui-dist/LICENSE
/.idea/makeen.iml
/.idea/material_theme_project_new.xml
/.idea/misc.xml
/.idea/modules.xml
/static/drf-yasg/swagger-ui-dist/NOTICE
/static/drf-yasg/swagger-ui-dist/oauth2-redirect.html
/.idea/inspectionProfiles/profiles_settings.xml
/.idea/inspectionProfiles/Project_Default.xml
/static/drf-yasg/README
/static/drf-yasg/redoc/redoc.min.js
/static/drf-yasg/redoc-old/redoc.min.js
/static/drf-yasg/redoc-old/redoc.min.js.map
/static/drf-yasg/redoc/redoc.standalone.js.map
/static/drf-yasg/redoc-init.js
/static/drf-yasg/redoc/redoc-logo.png
/static/drf-yasg/style.css
/static/drf-yasg/swagger-ui-dist/swagger-initializer.js
/static/drf-yasg/swagger-ui-dist/swagger-ui.css
/static/drf-yasg/swagger-ui-dist/swagger-ui.css.map
/static/drf-yasg/swagger-ui-dist/swagger-ui.js.map
/static/drf-yasg/swagger-ui-dist/swagger-ui-bundle.js
/static/drf-yasg/swagger-ui-dist/swagger-ui-bundle.js.map
/static/drf-yasg/swagger-ui-dist/swagger-ui-es-bundle.js
/static/drf-yasg/swagger-ui-dist/swagger-ui-es-bundle.js.map
/static/drf-yasg/swagger-ui-dist/swagger-ui-es-bundle-core.js
/static/drf-yasg/swagger-ui-dist/swagger-ui-es-bundle-core.js.map
/static/drf-yasg/swagger-ui-init.js
/static/drf-yasg/swagger-ui-dist/swagger-ui-standalone-preset.js
/static/drf-yasg/swagger-ui-dist/swagger-ui-standalone-preset.js.map
/.idea/vcs.xml
